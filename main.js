!function(){"use strict";class e{constructor(e,t){let{cardData:s,handleImageClick:n}=e;this._name=s.name,this._link=s.link,this._cardSelector=t,this._handleImageClick=n}_setEventListeners(){this._likeButton.addEventListener("click",this._handleLikeButton),this._deleteButton.addEventListener("click",this._handleDeleteButton),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this)}))}_handleDeleteButton=()=>{this._cardElement.remove(),this._cardElement=null};_handleLikeButton=()=>{this._likeButton.classList.toggle("card__like-button_active")};_getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}generateCard(){return this._cardElement=this._getTemplate(),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardTitleElement=this._cardElement.querySelector(".card__subheading"),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardTitleElement.textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}_hideInputError(e){this._errorMessageElement=this._formElement.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent="",this._errorMessageElement.classList.remove(this._errorClass)}_showInputError(e){this._errorMessageElement=this._formElement.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_checkFormValidity(){return!this._inputElements.every((e=>e.validity.valid))}toggleButtonState(){if(this._checkFormValidity(this._inputElements))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_setEventListeners(){this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState(this._inputElements)}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}const s=".cards__list",n="#card-template",r="#card-image-modal",i="#profile-add-modal",o="#profile-edit-modal",a=".profile__title",l=".profile__subtitle";class c{constructor(e){this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close(),e.target.classList.contains("modal__close")&&this.close()}))}}class m extends c{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),e.target.reset()}))}}const u=document.querySelector("#profile-edit-button"),d=document.querySelector("#profile-add-button"),_=document.querySelector("#profile-title-input"),h=document.querySelector("#profile-subtitle-input"),p=document.forms["card-form"],E=new class extends c{constructor(e){super(e),this._cardImageElement=this._popupElement.querySelector(".card__image-modal"),this._cardTitleElement=this._popupElement.querySelector(".modal__description_image-popup")}open(e){this._cardImageElement.src=e._link,this._cardImageElement.alt=e._name,this._cardTitleElement.textContent=e._name,super.open()}}(r),g=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderer=n,this._renderedItems=s,this._element=document.querySelector(t)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}addItems(e){this._element.prepend(e)}}({items:[{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"},{name:"Vanoise national Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"}],renderer:L},s),f=new m(i,(function(e){L({name:e.title,link:e.link}),f.close(),p.reset()})),v=new m(o,(function(e){S.setUserInfo(e),v.close()})),S=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{title:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e){this._nameElement&&(this._nameElement.textContent=e.title),this._jobElement&&(this._jobElement.textContent=e.subtitle)}}(a,l);function L(t){const s=function(t){return new e({cardData:t,handleImageClick:e=>{E.open(e)}},n).generateCard()}(t);g.addItems(s)}g.renderItems(),E.setEventListeners(),f.setEventListeners(),v.setEventListeners(),u.addEventListener("click",(()=>{v.open();const e=S.getUserInfo();_.value=e.title,h.value=e.description,k["profile-form"].toggleButtonState()})),d.addEventListener("click",(()=>{f.open(),k["card-form"].toggleButtonState()}));const k={};var y;y={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(y.formSelector)).forEach((e=>{const s=new t(y,e),n=e.getAttribute("id");k[n]=s,s.enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,